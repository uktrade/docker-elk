input {
  beats {
    port => 5044
  }
}

filter {

  # Grok filter to split the VPC Flow Log message in ${VPC_FLOWLOG_FORMAT} (env var) format.
  grok {
    match => { "message" => "${VPC_FLOWLOG_FORMAT}" }
  }

  # Set source address type to "private" for non-routable IP ranges, otherwise public.
  if ( [srcaddr] =~ /(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)/ ) {
    mutate {
      add_field => { "srcaddr-type" => "private" }
    }
  }
  else {
    mutate {
      add_field => { "srcaddr-type" => "public" }
    }
  }

  # Set destination address type to "private" for non-routable IP ranges, otherwise public.
  if ( [dstaddr] =~ /(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)/ ) {
    mutate {
      add_field => { "dstaddr-type" => "private" }
    }
  }
  else {
    mutate {
      add_field => { "dstaddr-type" => "public" }
    }
  }

  # Add "investigation" field when source and destination addresses are private.
  if ( ( [srcaddr-type] == 'private' ) and ( [dstaddr-type] == 'private' )  ) {
    mutate {
      add_field => { "investigation" => "true" }
    }
  }

}

output {

  # Standard out for debugging in CloudWatch
  stdout {}

  # Sentinel Output
  if [investigation] == 'true' {
    microsoft-logstash-output-azure-loganalytics {
      workspace_id => "${SENTINEL_WORKSPACE_ID}"
      workspace_key => "${SENTINEL_WORKSPACE_KEY}"
      custom_log_table_name => "${SENTINEL_WORKSPACE_TABLENAME_VPC_INVESTIGATION}"
    }
  }
  else {
    microsoft-logstash-output-azure-loganalytics {
      workspace_id => "${SENTINEL_WORKSPACE_ID}"
      workspace_key => "${SENTINEL_WORKSPACE_KEY}"
      custom_log_table_name => "${SENTINEL_WORKSPACE_TABLENAME_VPC_DEFAULT}"
    }
  }

  # SQS output for S3 buclet pruning
  sqs {
    queue => "${SQS_OUTPUT_QUEUE}"
    region => "${region}"
  }

}
