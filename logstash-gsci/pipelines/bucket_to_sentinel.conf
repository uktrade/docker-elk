input {
  beats {
    host => "${LOGSTASH_BEATS_HOST:0.0.0.0}"
    port => "${LOGSTASH_BEATS_PORT:5044}"
    client_inactivity_timeout => "${LOGSTASH_BEATS_TIMEOUT:60}"
  }
}

filter {

  json {
    source => "message"
  }

   if ".s3.eu-west-2.amazonaws.com" in [message] or "s3.amazonaws.com" in [message]{

      grok { match => { "message" => "%{S3_ACCESS_LOG}" } }
        
      date{
        match=> ["timestamp","dd/MMM/YYYY:HH:mm:ss Z"]
        target=> "@timestamp"
      }
  }

  else {
    date {
      match => ["timestamp","UNIX_MS"]
      target => "@timestamp"
    }
  }

  mutate {
    remove_field => ["message"]
    remove_field => [ "tags" ]
    remove_field => ["agent"]
  }
}

output {
  # Standard out for debugging in CloudWatch
  stdout {
    codec => rubydebug
  }
  
  microsoft-logstash-output-azure-loganalytics {
    workspace_id => "${SENTINEL_WORKSPACE_ID}"
    workspace_key => "${SENTINEL_WORKSPACE_KEY}"
    custom_log_table_name => "${SENTINEL_WORKSPACE_TABLENAME_CLOUDFRONT}"
  }

  sqs {
    queue => "${SQS_OUTPUT_QUEUE}"
    region => "${region}"
  }
  
}
