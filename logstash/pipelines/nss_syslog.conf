input {
  tcp {
    port => 3332
  }
}

filter {

# NSS pattern https://help.zscaler.com/zia/nss-feed-output-format-web-logs
# %s{time}","%s{tz}","%d{ss}","%d{mm}","%d{hh}","%d{dd}","%d{mth}","%s{mon}","%d{yyyy}","%s{day}","%d{epochtime}",
# "%s{dept}","%s{login}","%s{ologin}","%d{throttlereqsize}","%d{throttlerespsize}","%s{bwthrottle}","%s{bwclassname}",
# "%s{bwrulename}","%s{appname}","%s{appclass}","%s{module}","%s{bamd5}","%s{dlpdict}","%s{dlpdicthitcount}","%s{dlpeng}",
# "%d{dlpidentifier}","%s{dlpmd5}","%s{fileclass}","%s{filetype}","%s{filesubtype}","%s{filename}","%s{unscannable}",
# "%d{reqdatasize}","%d{reqhdrsize}","%d{reqsize}","%d{respdatasize}","%d{resphdrsize}","%d{respsize}","%d{totalsize}",
# "%s{reqmethod}","%s{reqversion}","%s{respcode}","%s{respversion}","%s{referer}","%s{uaclass}","%s{ua}","%s{ua_token}",
# "%s{host}","%s{ehost}","%s{eurl}","%s{ereferer}","%s{contenttype}","%s{refererhost}","%s{erefererpath}","%s{eurlpath}",
# "%s{erefererhost}","%s{url}","%s{mobappname}","%s{mobappcat}","%s{mobdevtype}","%s{cip}","%s{cintip}","%s{sip}",
# "%s{proto}","%s{trafficredirectmethod}","%s{location}","%s{rulelabel}","%s{ruletype}","%s{reason}","%s{action}",
# "%s{ssldecrypted}","%s{clientsslcipher}","%s{clienttlsversion}","%s{clientsslsessreuse}","%s{srvsslcipher}",
# "%s{srvtlsversion}","%s{srvocspresult}","%s{srvcertchainvalpass}","%s{srvwildcardcert}","%s{serversslsessreuse}",
# "%s{srvcertvalidationtype}","%s{srvcertvalidityperiod}","%d{riskscore}","%s{threatname}","%s{malwareclass}",
# "%s{malwarecat}","%s{urlclass}","%s{urlsupercat}","%s{urlcat}","%s{devicehostname}","%s{devicemodel}","%s{devicename}",
# "%s{deviceostype}","%s{deviceosversion}","%s{deviceowner}","%s{deviceappversion}","%s{ztunnelversion}","%d{recordid}",
# "%s{productversion}","%s{nsssvcip}","%s{eedone}

  csv{
    columns => ["zscaler_time","event.timezone","seconds","minuets","hours","num_day","num_mon","month","year","day",
    "epochtime","client.department","client.email","client.loginID","throttleresize","throttlerespsize",
    "network.bandwidth","network.bandwidth_class","rule.bandwidth","application.name","application.class",
    "application.module","cloudsandbox.filehash","dlp.dictionary","dlp.num_matches","dlp.engine","dlp.identifier",
    "dlp.md5","file.class","file.type","file.subtype","file.name","file.unscannable","reqdatasize","reqhdrsize",
    "reqsize","respdatasize","resphdrsize","respsize","totalsize","http.request.method","http.request.version",
    "http.response.code","http.response.version","http.referer","http.ua.class","http.ua.name","http.ua.token",
    "http.host","http.host_encoded","url.encoded","http.referer_encoded","http.content_type","http.destination.referer",
    "http.destination.referer_path_encoded","url.path_encoded","http.destination.referer_encoded","url.domain",
    "mobile.appname", "mobile.app_category","mobile.type", "client.ips.internal","client.ips.external","service.ip",
    "http.protocol","http.forwarding_method","client.location", "rule.name","rule.category","rule.reason",
    "rule.action","http.ssl_inspected","clientsslcipher","clienttlsversion","clientsslsessreuse","srvsslcipher",
    "srvtlsversion","srvocspresult","srvcertchainvalpass","srvwildcardcert","serversslsessreuse",
    "srvcertvalidationtype","srvcertvalidityperiod","threat.score","threat.name","threat.malware_class",
    "threat.malware_category","url.class","url.super_category","url.category","device.asset_id","device.model",
    "device.id","device.os","device.os_version","device.owner","device.app_version", "device.zscaler_version",
    "misc.recordid", "misc.product_version","nsssvcip","eedone"]
  }
  fingerprint{
    target => ["event.hash"]
  }
  if [event.hash] == "da39a3ee5e6b4b0d3255bfef95601890afd80709"{
    drop{}
  }
  if [rule.name] == "NA"{
    mutate{
      replace => {"rule.name" => "User-Derfined-Block"}
    }
  }
  mutate{
    #Can not find a way to add lable field, to replace the tag ZSCALER_NSS_LOG
    #add_filed => {"labels" => {"application":"zscaler", "type":"nss_web_log"}}
    add_field => {"event.ingested" => "%{@timestamp}"}
    add_field => {"ecs.version" => "1.6"}
    add_field => {"event.original" => "%{message}"}
    add_field => {"event.category" => "web"}
    add_field => {"event.type" => "connection"}
    add_field => {"event.kind" => "event"}
  }
  date{
    match => ["zscaler_time", "EEE MMM dd HH:mm:ss yyyy"]
    target => "@timestamp"
  }
  mutate{
    #could see no relevance in keeping
    remove_field => ["ctime", "stime", "zscaler_time", "seconds", "minuets","hours","num_day","num_mon","month","year",
    "day","epochtime","throttleresize","throttlerespsize","timezone","reqdatasize","reqhdrsize","reqsize","respdatasize",
    "resphdrsize","respsize","totalsize","clientsslcipher","clienttlsversion","clientsslsessreuse","srvsslcipher","srvtlsversion",
    "srvocspresult","srvcertchainvalpass","srvwildcardcert","serversslsessreuse","srvcertvalidationtype",
    "srvcertvalidityperiod","nsssvcip","eedone", "[dpl][num_matches]"]
  }
}

output {
  #stdout { codec => json }
  elasticsearch {
    ssl => true
    ssl_certificate_verification => false

    user => logstash_internal
    password => "${ELASTICSEARCH_PASSWORD}"
    hosts => ["${ELASTICSEARCH_URL}"]

    index => "zscaler-v2"
  }
}
